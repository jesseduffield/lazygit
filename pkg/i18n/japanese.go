package i18n

const japaneseIntroPopupMessage = `
Thanks for using lazygit! Seriously you rock. Three things to share with you:

 1) If you want to learn about lazygit's features, watch this vid:
      https://youtu.be/CPLdltN7wgE

 2) Be sure to read the latest release notes at:
      https://github.com/jesseduffield/lazygit/releases

 3) If you're using git, that makes you a programmer! With your help we can make
    lazygit better, so consider becoming a contributor and joining the fun at
      https://github.com/jesseduffield/lazygit
    You can also sponsor me and tell me what to work on by clicking the donate
    button at the bottom right.
    Or even just star the repo to share the love!
`

// exporting this so we can use it in tests
func japaneseTranslationSet() TranslationSet {
	return TranslationSet{
		NotEnoughSpace:                 "パネルの描画に十分な空間がありません",
		DiffTitle:                      "差分",
		FilesTitle:                     "ファイル",
		BranchesTitle:                  "ブランチ",
		CommitsTitle:                   "コミット",
		StashTitle:                     "stash",
		SnakeTitle:                     "Snake",
		EasterEgg:                      "イースターエッグ",
		UnstagedChanges:                `ステージされていない変更`,
		StagedChanges:                  `ステージされた変更`,
		MainTitle:                      "メイン",
		MergeConfirmTitle:              "マージ",
		StagingTitle:                   "メインパネル (staging)",
		MergingTitle:                   "メインパネル (merging)",
		NormalTitle:                    "メインパネル (normal)",
		LogTitle:                       "ログ",
		CommitMessage:                  "コミットメッセージ",
		CredentialsUsername:            "ユーザ名",
		CredentialsPassword:            "パスワード",
		CredentialsPassphrase:          "SSH鍵のパスフレーズを入力",
		CredentialsPIN:                 "SSH keyのPINを入力してください",
		PassUnameWrong:                 "パスワード, パスフレーズまたはユーザ名が間違っています。",
		CommitChanges:                  "変更をコミット",
		AmendLastCommit:                "最新のコミットにamend",
		AmendLastCommitTitle:           "最新のコミットにamend",
		SureToAmend:                    "最新のコミットに変更をamendします。よろしいですか? コミットメッセージはコミットパネルから変更できます。",
		NoCommitToAmend:                "amend可能なコミットが存在しません。",
		CommitChangesWithEditor:        "gitエディタを使用して変更をコミット",
		StatusTitle:                    "ステータス",
		LcNavigate:                     "移動",
		LcMenu:                         "メニュー",
		LcExecute:                      "実行",
		LcToggleStaged:                 "ステージ/アンステージ",
		LcToggleStagedAll:              "すべての変更をステージ/アンステージ",
		LcToggleTreeView:               "ファイルツリーの表示を切り替え",
		LcOpenMergeTool:                "git mergetoolを開く",
		LcRefresh:                      "リフレッシュ",
		LcPush:                         "push",
		LcPull:                         "pull",
		LcScroll:                       "スクロール",
		MergeConflictsTitle:            "マージコンフリクト",
		LcCheckout:                     "checkout",
		LcFileFilter:                   "ファイルをフィルタ (ステージ/アンステージ)",
		FilterStagedFiles:              "ステージされたファイルのみを表示",
		FilterUnstagedFiles:            "ステージされていないファイルのみを表示",
		ResetCommitFilterState:         "フィルタをリセット",
		NoChangedFiles:                 "変更されたファイルはありません",
		PullWait:                       "pull中...",
		PushWait:                       "push中...",
		FetchWait:                      "fetch中...",
		LcSoftReset:                    "softリセット",
		AlreadyCheckedOutBranch:        "ブランチはすでにcheckoutされています。",
		SureForceCheckout:              "ローカルの変更を全て失いますが、本当に強制checkoutをしますか？",
		ForceCheckoutBranch:            "強制checkoutブランチ",
		BranchName:                     "ブランチ名",
		NewBranchNameBranchOff:         "新規ブランチ名 ('{{.branchName}}' に作成)",
		CantDeleteCheckOutBranch:       "checkout中のブランチは削除できません!",
		DeleteBranch:                   "ブランチを削除",
		DeleteBranchMessage:            "ブランチ '{{.selectedBranchName}}' を削除します。よろしいですか?",
		ForceDeleteBranchMessage:       "'{{.selectedBranchName}}' はマージされていません。本当に削除しますか?",
		LcRebaseBranch:                 "checkout中のブランチをこのブランチにrebase",
		CantRebaseOntoSelf:             "ブランチを自分自身にrebaseすることはできません。",
		CantMergeBranchIntoItself:      "ブランチを自分自身にマージすることはできません。",
		LcForceCheckout:                "強制checkout",
		LcCheckoutByName:               "ブランチ名を指定してcheckout",
		LcNewBranch:                    "新しいブランチを作成",
		LcDeleteBranch:                 "ブランチを削除",
		NoBranchesThisRepo:             "リポジトリにブランチが存在しません",
		CommitMessageConfirm:           "{{.keyBindClose}}: 閉じる, {{.keyBindNewLine}}: 改行, {{.keyBindConfirm}}: 確定",
		CommitWithoutMessageErr:        "コミットメッセージを入力してください",
		CloseConfirm:                   "{{.keyBindClose}}: 閉じる/キャンセル, {{.keyBindConfirm}}: 確認",
		LcClose:                        "閉じる",
		LcQuit:                         "終了",
		LcSquashDown:                   "squash down",
		LcFixupCommit:                  "fixup commit",
		NoCommitsThisBranch:            "このブランチにコミットはありません",
		CannotSquashOrFixupFirstCommit: "squashするためのコミットがありません",
		Fixup:                          "fixup",
		SureFixupThisCommit:            "下のコミットにマージされます、このコミットを'fixup'しますか？",
		SureSquashThisCommit:           "このコミットを下のコミットにsquashします。よろしいですか?",
		Squash:                         "Squash",
		LcPickCommit:                   "コミットを選択 (rebase中)",
		LcRevertCommit:                 "コミットをrevert",
		LcRewordCommit:                 "コミットメッセージを編集",
		LcDeleteCommit:                 "コミットを削除",
		LcMoveDownCommit:               "コミットを1つ下に移動",
		LcMoveUpCommit:                 "コミットを1つ上に移動",
		LcEditCommit:                   "コミットを編集",
		LcAmendToCommit:                "ステージされた変更でamendコミット",
		// LcResetCommitAuthor: "reset commit author",
		// SetAuthorPromptTitle: "Set author (must look like 'Name <Email>')",
		// SureResetCommitAuthor: "The author field of this commit will be updated to match the configured user. This also renews the author timestamp. Continue?",
		LcRenameCommitEditor: "エディタでコミットメッセージを編集",
		Error:                "エラー",
		LcSelectHunk:         "hunkを選択",
		LcNavigateConflicts:  "コンフリクトを移動",
		LcPickHunk:           "hunkを選択",
		LcPickAllHunks:       "全てのhunkを選択",
		LcUndo:               "アンドゥ",
		LcUndoReflog:         "アンドゥ (via reflog) (experimental)",
		LcRedoReflog:         "リドゥ (via reflog) (experimental)",
		// UndoTooltip: "The reflog will be used to determine what git command to run to undo the last git command. This does not include changes to the working tree; only commits are taken into consideration.",
		// RedoTooltip: "The reflog will be used to determine what git command to run to redo the last git command. This does not include changes to the working tree; only commits are taken into consideration.",
		// DiscardAllTooltip:                   "Discard both staged and unstaged changes in '{{.path}}'.",
		// DiscardUnstagedTooltip:              "Discard unstaged changes in '{{.path}}'.",
		LcPop:                     "pop",
		LcDrop:                    "drop",
		LcApply:                   "適用",
		NoStashEntries:            "stashが存在しません",
		StashDrop:                 "stashを削除",
		SureDropStashEntry:        "stashを削除します。よろしいですか?",
		StashPop:                  "stashをpop",
		SurePopStashEntry:         "stashをpopします。よろしいですか?",
		StashApply:                "stashを適用",
		SureApplyStashEntry:       "stashを適用します。よろしいですか?",
		NoTrackedStagedFilesStash: "stashのための追跡/ステージ済みファイルがありません",
		// NoFilesToStash: "You have no files to stash",
		StashChanges:                        "変更をstash",
		LcRenameStash:                       "stashを変更",
		RenameStashPrompt:                   "stash名を変更: {{.stashName}}",
		OpenConfig:                          "設定ファイルを開く",
		EditConfig:                          "設定ファイルを編集",
		ForcePush:                           "force push",
		ForcePushPrompt:                     "ブランチがリモートブランチから分岐しています。'esc'でキャンセル, または'enter'でforce pushします。",
		ForcePushDisabled:                   "ブランチがリモートブランチから分岐しています。force pushは無効化されています。",
		UpdatesRejectedAndForcePushDisabled: "force pushが無効化されています",
		LcCheckForUpdate:                    "更新を確認",
		CheckingForUpdates:                  "更新を確認中...",
		UpdateAvailableTitle:                "最新リリース!",
		UpdateAvailable:                     "バージョン {{.newVersion}} をインストールしますか?",
		UpdateInProgressWaitingStatus:       "更新中",
		UpdateCompletedTitle:                "更新完了!",
		UpdateCompleted:                     "更新のインストールに成功しました。lazygitを再起動してください。",
		FailedToRetrieveLatestVersionErr:    "バージョン情報の取得に失敗しました",
		OnLatestVersionErr:                  "使用中のバージョンは最新です",
		MajorVersionErr:                     "新バージョン ({{.newVersion}}) は現在のバージョン ({{.currentVersion}}) と後方互換性がありません。",
		CouldNotFindBinaryErr:               "{{.url}} にバイナリが存在しませんでした。",
		UpdateFailedErr:                     "更新失敗: {{.errMessage}}",
		ConfirmQuitDuringUpdateTitle:        "現在更新中",
		ConfirmQuitDuringUpdate:             "現在更新を実行中です。終了しますか?",
		MergeToolTitle:                      "マージツール",
		MergeToolPrompt:                     "`git mergetool`を開きます。よろしいですか?",
		IntroPopupMessage:                   japaneseIntroPopupMessage,
		GitconfigParseErr:                   `引用符で囲まれていない'\'のため、Gogitはgitconfigのパースに失敗しました。削除して問題を解消してください。`,
		LcEditFile:                          `ファイルを編集`,
		LcOpenFile:                          `ファイルを開く`,
		LcIgnoreFile:                        `.gitignoreに追加`,
		// LcExcludeFile: `add to .git/info/exclude`,
		LcRefreshFiles:           `ファイルをリフレッシュ`,
		LcMergeIntoCurrentBranch: `現在のブランチにマージ`,
		ConfirmQuit:              `終了します。よろしいですか?`,
		SwitchRepo:               `最近使用したリポジトリに切り替え`,
		LcAllBranchesLogGraph:    `すべてのブランチログを表示`,
		UnsupportedGitService:    `サポートされていないGitサービスです。`,
		LcCreatePullRequest:      `pull requestを作成`,
		LcCopyPullRequestURL:     `pull requestのURLをクリップボードにコピー`,
		NoBranchOnRemote:         `ブランチがリモートに存在しません。リモートにpushしてください。`,
		LcFetch:                  `fetch`,
		NoAutomaticGitFetchTitle: `自動 git fetch に失敗`,
		NoAutomaticGitFetchBody:  `lazygitはプライベートリポジトリで"git fetch"をできません。ファイルパネルで'f'を使い、手動で"git fetch"を実行してください`,
		FileEnter:                `ファイルの個々のハンク/行、またはそれぞれのディレクトリをステージする`,
		FileStagingRequirements:  `個々の行か追跡されたファイルのみをステージできます`,
		StageSelection:           `選択行をステージ/アンステージ`,
		ResetSelection:           `変更を削除 (git reset)`,
		ToggleDragSelect:         `範囲選択を切り替え`,
		ToggleSelectHunk:         `hunk選択を切り替え`,
		ToggleSelectionForPatch:  `行をパッチに追加/削除`,
		// EditHunk: `edit hunk`,
		ToggleStagingPanel:     `パネルを切り替え`,
		ReturnToFilesPanel:     `ファイル一覧に戻る`,
		FastForward:            `upstreamからこのブランチをfast-forwardする`,
		Fetching:               "fetching and fast-forwarding {{.from}} から {{.to}} へfetch/fast-foward中...",
		FoundConflicts:         "コンフリクトしました! 'esc'で中断、'enter'で続行",
		FoundConflictsTitle:    "自動マージ失敗",
		PickHunk:               "hunkを選択",
		PickAllHunks:           "全てのhunkを選択",
		ViewMergeRebaseOptions: "「merge/rebase」オプションを開く",
		NotMergingOrRebasing:   "rebase/マージ中ではありません",
		RecentRepos:            "最近使用したリポジトリ",
		MergeOptionsTitle:      "「merge」オプション",
		RebaseOptionsTitle:     "「rebase」オプション",
		CommitMessageTitle:     "コミットメッセージ",
		LocalBranchesTitle:     "ブランチ",
		SearchTitle:            "検索",
		TagsTitle:              "タグ",
		MenuTitle:              "メニュー",
		RemotesTitle:           "リモート",
		RemoteBranchesTitle:    "リモートブランチ",
		PatchBuildingTitle:     "メインパネル (patch building)",
		InformationTitle:       "information",
		SecondaryTitle:         "secondary",
		ReflogCommitsTitle:     "参照ログ",
		GlobalTitle:            "グローバルキーバインド",
		ConflictsResolved:      "全てのコンフリクトが解消されました。続けますか?",
		RebasingTitle:          "rebase中",
		ConfirmRebase:          "'{{.checkedOutBranch}}'を'{{.selectedBranch}}'へrebaseしてもよろしいですか?",
		ConfirmMerge:           "'{{.selectedBranch}}'を'{{.checkedOutBranch}}'へマージしてもよろしいですか?",
		FwdNoUpstream:          "upstreamがないブランチはfast-fowardできません",
		FwdNoLocalUpstream:     "ローカルに登録されていないブランチはfast-fowardできません",
		FwdCommitsToPush:       "push前のコミットがあるブランチはfast-fowardできません",
		ErrorOccurred:          "エラーが発生しました! issueを作成してください: ",
		NoRoom:                 "十分な空きがありません",
		YouAreHere:             "現在位置",
		// YouDied: "YOU DIED!",
		LcRewordNotSupported:       "インタラクティブrebaseのコミットの編集は現在サポートされていません",
		LcCherryPickCopy:           "コミットをコピー (cherry-pick)",
		LcCherryPickCopyRange:      "コミットを範囲コピー (cherry-pick)",
		LcPasteCommits:             "コミットを貼り付け (cherry-pick)",
		SureCherryPick:             "このブランチに、コピーされたコミットをcherry-pickしてもよろしいですか?",
		CherryPick:                 "cherry-Pick",
		Donate:                     "支援",
		AskQuestion:                "質問",
		PrevLine:                   "前の行を選択",
		NextLine:                   "次の行を選択",
		PrevHunk:                   "前のhunkを選択",
		NextHunk:                   "次のhunkを選択",
		PrevConflict:               "前のコンフリクトを選択",
		NextConflict:               "次のコンフリクトを選択",
		SelectPrevHunk:             "前のhunkを選択",
		SelectNextHunk:             "次のhunkを選択",
		ScrollDown:                 "下にスクロール",
		ScrollUp:                   "上にスクロール",
		LcScrollUpMainPanel:        "メインパネルを上にスクロール",
		LcScrollDownMainPanel:      "メインパネルを下にスクロール",
		AmendCommitTitle:           "amendコミット",
		AmendCommitPrompt:          "ステージされたファイルで現在のコミットをamendします。よろしいですか?",
		DeleteCommitTitle:          "コミットを削除",
		DeleteCommitPrompt:         "選択されたコミットを削除します。よろしいですか?",
		SquashingStatus:            "squash中",
		FixingStatus:               "fix up中",
		DeletingStatus:             "削除中",
		MovingStatus:               "移動中",
		RebasingStatus:             "rebase中",
		AmendingStatus:             "amend中",
		CherryPickingStatus:        "cherry-pick中",
		UndoingStatus:              "undo中",
		RedoingStatus:              "redo中",
		CheckingOutStatus:          "check out中",
		CommittingStatus:           "commit中",
		CommitFiles:                "commit files",
		SubCommitsDynamicTitle:     "コミット (%s)",
		CommitFilesDynamicTitle:    "diff files (%s)",
		RemoteBranchesDynamicTitle: "リモートブランチ (%s)",
		LcViewItemFiles:            "選択項目のファイルを表示",
		CommitFilesTitle:           "コミットファイル",
		LcCheckoutCommitFile:       "checkout file",
		LcDiscardOldFileChange:     "ファイルに対するコミットでの変更を破棄",
		DiscardFileChangesTitle:    "ファイルの変更を破棄",
		DiscardFileChangesPrompt:   "コミットに対するファイルへの変更を破棄してもよろしいですか?このコミットでファイルが作成されていた場合、ファイルは削除されます",
		DisabledForGPG:             "GPGを使用している場合、機能は利用できません",
		CreateRepo:                 "Gitリポジトリではありません。リポジトリを作成しますか? (y/n): ",
		// BareRepo: "You've attempted to open Lazygit in a bare repo but Lazygit does not yet support bare repos. Open most recent repo? (y/n) ",
		// InitialBranch: "Branch name? (leave empty for git's default): ",
		// NoRecentRepositories: "Must open lazygit in a git repository. No valid recent repositories. Exiting.",
		// IncorrectNotARepository: "The value of 'notARepository' is incorrect. It should be one of 'prompt', 'create', 'skip', or 'quit'.",
		AutoStashTitle:                "autostash?",
		AutoStashPrompt:               "変更を反映するには、変更をstashしてpopする必要があります。自動で行いますか? (enter/esc)",
		StashPrefix:                   "次に対する自動stash ",
		LcViewDiscardOptions:          "「変更を破棄」オプションを開く",
		LcCancel:                      "キャンセル",
		LcDiscardAllChanges:           "すべての変更を破棄",
		LcDiscardUnstagedChanges:      "未ステージの変更を破棄",
		LcDiscardAllChangesToAllFiles: "ワーキングツリーを破棄",
		LcDiscardAnyUnstagedChanges:   "未ステージの変更を破棄する",
		LcDiscardUntrackedFiles:       "追跡されていないファイルの変更を破棄",
		// LcDiscardStagedChanges: "discard staged changes",
		LcHardReset:         "hardリセット",
		LcViewResetOptions:  `「リセット」オプションを開く`,
		LcCreateFixupCommit: `このコミットに対するfixupコミットを作成`,
		// LcSquashAboveCommits: `squash all 'fixup!' commits above selected commit (autosquash)`,
		SquashAboveCommits:          `選択したコミット下に全ての'fixup!'コミットをsquashする(autosquash)`,
		SureSquashAboveCommits:      `{{.commit}}に対するすべての fixup! コミットをsquashします。よろしいですか?`,
		CreateFixupCommit:           `fixupコミットを作成`,
		SureCreateFixupCommit:       `{{.commit}} に対する fixup! コミットを作成します。よろしいですか?`,
		LcExecuteCustomCommand:      "カスタムコマンドを実行",
		CustomCommand:               "カスタムコマンド:",
		LcCommitChangesWithoutHook:  "pre-commitフックを実行せずに変更をコミット",
		SkipHookPrefixNotConfigured: "フックをスキップするためのコミットメッセージの接頭辞が設定されていません。`git.skipHookPrefix = 'WIP'`をconfigに追加してください",
		LcResetTo:                   `次へリセット`,
		PressEnterToReturn:          "Enterを入力してください",
		LcViewStashOptions:          "「stash」オプションを開く",
		LcStashAllChanges:           "変更をstash",
		LcStashStagedChanges:        "ステージされた変更をstash",
		// LcStashAllChangesKeepIndex: "stash all changes and keep index",
		// LcStashUnstagedChanges: "stash unstaged changes",
		// LcStashIncludeUntrackedChanges: "stash all changes including untracked files",
		LcStashOptions:              "「stash」オプション",
		NotARepository:              "Error: gitリポジトリの中で実行してください",
		LcJump:                      "パネルに移動",
		LcScrollLeftRight:           "左右にスクロール",
		LcScrollLeft:                "左スクロール",
		LcScrollRight:               "右スクロール",
		DiscardPatch:                "パッチを破棄",
		DiscardPatchConfirm:         "パッチは単一のコミット/stashからのみ作成できます。現在のパッチを破棄しますか?",
		CantPatchWhileRebasingError: "マージ/rebase中はパッチを作成またはパッチコマンドを実行できません",
		LcToggleAddToPatch:          "パッチに含めるファイルを切り替え",
		LcToggleAllInPatch:          "パッチに含める全てのファイルを切り替え",
		LcUpdatingPatch:             "パッチを更新中",
		ViewPatchOptions:            "「カスタムパッチ」オプション",
		PatchOptionsTitle:           "「パッチ」オプション",
		NoPatchError:                "まだパッチが作成されていません。コミット内のファイルで'space'か'enter'を押してパッチを作成できます",
		LcEnterFile:                 "パッチに追加する行を選択するためにファイルを開く (またはディレクトリを展開)",
		ExitCustomPatchBuilder:      `カスタムパッチビルダーを終了`,
		EnterUpstream:               `'<remote> <branchname>' の形式でupstreamを入力`,
		InvalidUpstream:             "upstreamの形式が正しくありません。'<remote> <branchname>' の形式で入力してください。",
		ReturnToRemotesList:         `リモート一覧に戻る`,
		LcAddNewRemote:              `リモートを新規追加`,
		LcNewRemoteName:             `新規リモート名:`,
		LcNewRemoteUrl:              `新規リモートURL:`,
		LcEditRemoteName:            `{{.remoteName}} の新しいリモート名を入力:`,
		LcEditRemoteUrl:             `{{.remoteName}} の新しいリモートURLを入力:`,
		LcRemoveRemote:              `リモートを削除`,
		LcRemoveRemotePrompt:        "リモートを削除します。よろしいですか?",
		DeleteRemoteBranch:          "リモートブランチを削除",
		DeleteRemoteBranchMessage:   "リモートブランチを削除します。よろしいですか",
		// LcSetAsUpstream: "set as upstream of checked-out branch",
		LcSetUpstream: "checkoutしたブランチのupstreamに設定",
		// LcUnsetUpstream: "unset upstream of selected branch",
		SetUpstreamTitle:       "upstreamブランチを変更",
		SetUpstreamMessage:     "upstreamブランチを'{{.checkedOut}}'から'{{.selected}}'に変更してもよろしいですか?",
		LcEditRemote:           "リモートを編集",
		LcTagCommit:            "タグを作成",
		TagMenuTitle:           "タグを作成",
		TagNameTitle:           "タグ名:",
		TagMessageTitle:        "タグメッセージ: ",
		LcAnnotatedTag:         "注釈付きタグ",
		LcLightweightTag:       "軽量タグ",
		LcDeleteTag:            "タグを削除",
		DeleteTagTitle:         "タグを削除",
		DeleteTagPrompt:        "タグ '{{.tagName}}' を削除します。よろしいですか?",
		PushTagTitle:           "リモートにタグ '{{.tagName}}' をpush",
		LcPushTag:              "タグをpush",
		LcCreateTag:            "タグを作成",
		CreateTagTitle:         "タグ名:",
		LcFetchRemote:          "リモートをfetch",
		FetchingRemoteStatus:   "リモートをfetch",
		LcCheckoutCommit:       "コミットをcheckout",
		SureCheckoutThisCommit: "選択されたコミットをcheckoutします。よろしいですか?",
		LcGitFlowOptions:       "「git-flow」オプション",
		NotAGitFlowBranch:      "git flowブランチではないようです",
		NewGitFlowBranchPrompt: "新しい{{.branchType}}の名前:",
		IgnoreTracked:          "追跡されていないファイルを削除",
		IgnoreTrackedPrompt:    "追跡されているファイルをignoreします。よろしいですか?",
		// ExcludeTracked: "Exclude tracked file",
		// ExcludeTrackedPrompt: "Are you sure you want to exclude a tracked file?",
		LcViewResetToUpstreamOptions: "「upstream reset」オプションを開く",
		LcNextScreenMode:             "次のスクリーンモード (normal/half/fullscreen)",
		LcPrevScreenMode:             "前のスクリーンモード",
		LcStartSearch:                "検索を開始",
		Panel:                        "パネル",
		Keybindings:                  "キーバインド",
		LcRenameBranch:               "ブランチ名を変更",
		// LcSetUnsetUpstream: "set/unset upstream",
		NewBranchNamePrompt:      "新しいブランチ名を入力",
		RenameBranchWarning:      "このブランチはリモートを追跡しています。このアクションはリモートではなくローカルブランチの名前のみを変更します。続行しますか?",
		LcOpenMenu:               "メニューを開く",
		LcResetCherryPick:        "選択されたcherry-picked(コピー済)コミットをリセット",
		LcNextTab:                "次のタブ",
		LcPrevTab:                "前のタブ",
		LcCantUndoWhileRebasing:  "rebase中はアンドゥできません。",
		LcCantRedoWhileRebasing:  "rebase中はリドゥできません。",
		MustStashWarning:         "パッチをindexにpullするにはstashし、変更をアンステージする必要があります。なにか問題が発生した場合は、stashからファイルにアクセスできます。続けますか?",
		MustStashTitle:           "stashする必要があります",
		ConfirmationTitle:        "確認パネル",
		LcPrevPage:               "前のページ",
		LcNextPage:               "次のページ",
		LcGotoTop:                "最上部までスクロール",
		LcGotoBottom:             "最下部までスクロール",
		LcFilteringBy:            "filtering by",
		ResetInParentheses:       "(reset)",
		LcOpenFilteringMenu:      "「filter-by-path」オプション",
		LcFilterBy:               "filter by",
		LcExitFilterMode:         "filtering by pathを停止",
		LcFilterPathOption:       "filter byするパスを入力",
		EnterFileName:            "パスを入力:",
		FilteringMenuTitle:       "Filtering",
		MustExitFilterModeTitle:  "コマンドがありません",
		MustExitFilterModePrompt: "filterdモードにコマンドはありません。filterdモードを終了しますか?",
		LcDiff:                   "差分",
		LcEnterRefToDiff:         "diffを開く参照を入力",
		LcEnteRefName:            "参照を入力:",
		LcExitDiffMode:           "差分モードを終了",
		DiffingMenuTitle:         "差分",
		LcSwapDiff:               "diffを入れ替え",
		LcOpenDiffingMenu:        "差分メニューを開く",
		// // the actual view is the extras view which I intend to give more tabs in future but for now we'll only mention the command log part
		LcOpenExtrasMenu:                 "コマンドログメニューを開く",
		LcShowingGitDiff:                 "出力を表示:",
		LcCommitDiff:                     "コミットの差分",
		LcCopyCommitShaToClipboard:       "コミットのSHAをクリップボードにコピー",
		LcCommitSha:                      "コミットのSHA",
		LcCommitURL:                      "コミットのURL",
		LcCopyCommitMessageToClipboard:   "コミットメッセージをクリップボードにコピー",
		LcCommitMessage:                  "コミットメッセージ",
		LcCommitAuthor:                   "コミットの作成者名",
		LcCopyCommitAttributeToClipboard: "コミットの情報をコピー",
		LcCopyBranchNameToClipboard:      "ブランチ名をクリップボードにコピー",
		LcCopyFileNameToClipboard:        "ファイル名をクリップボードにコピー",
		LcCopyCommitFileNameToClipboard:  "コミットされたファイル名をクリップボードにコピー",
		LcCopySelectedTexToClipboard:     "選択されたテキストをクリップボードにコピー",
		LcCommitPrefixPatternError:       "commitPrefixのパターンにエラーがあります",
		NoFilesStagedTitle:               "ファイルがステージされていません",
		NoFilesStagedPrompt:              "ファイルがステージされていません。すべての変更をコミットしますか?",
		BranchNotFoundTitle:              "ブランチが見つかりませんでした。",
		BranchNotFoundPrompt:             "ブランチが見つかりませんでした。新しくブランチを作成します ",
		// LcBranchUnknown: "branch unknown",
		UnstageLinesTitle:                   "選択行をアンステージ",
		UnstageLinesPrompt:                  "選択された行を削除 (git reset) します。よろしいですか? この操作は取り消せません。\nこの警告を無効化するには設定ファイルの 'gui.skipUnstageLineWarning' を true に設定してください。",
		LcCreateNewBranchFromCommit:         "コミットにブランチを作成",
		LcBuildingPatch:                     "パッチを構築",
		LcViewCommits:                       "コミットを閲覧",
		MinGitVersionError:                  "lazygitの実行にはGit 2.20以降のバージョンが必要です。Gitを更新してください。もしくは、lazygitの後方互換性を改善するために https://github.com/jesseduffield/lazygit/issues にissueを作成してください。",
		LcRunningCustomCommandStatus:        "カスタムコマンドを実行",
		LcSubmoduleStashAndReset:            "未コミットのsubmoduleの変更と更新をstashする",
		LcAndResetSubmodules:                "submoduleをリセットする",
		LcEnterSubmodule:                    "サブモジュールを開く",
		LcCopySubmoduleNameToClipboard:      "サブモジュール名をクリップボードにコピー",
		RemoveSubmodule:                     "サブモジュールを削除",
		LcRemoveSubmodule:                   "サブモジュールを削除",
		RemoveSubmodulePrompt:               "サブモジュール '%s' とそのディレクトリを削除します。よろしいですか? この操作は取り消せません。",
		LcResettingSubmoduleStatus:          "サブモジュールをリセット",
		LcNewSubmoduleName:                  "新規サブモジュール名:",
		LcNewSubmoduleUrl:                   "新規サブモジュールのURL:",
		LcNewSubmodulePath:                  "新規サブモジュールのパス:",
		LcAddSubmodule:                      "サブモジュールを新規追加",
		LcAddingSubmoduleStatus:             "サブモジュールを新規追加",
		LcUpdateSubmoduleUrl:                "サブモジュール '%s' のURLを更新",
		LcUpdatingSubmoduleUrlStatus:        "URLを更新",
		LcEditSubmoduleUrl:                  "サブモジュールのURLを更新",
		LcInitializingSubmoduleStatus:       "サブモジュールを初期化",
		LcInitSubmodule:                     "サブモジュールを初期化",
		LcSubmoduleUpdate:                   "サブモジュールを更新",
		LcUpdatingSubmoduleStatus:           "サブモジュールを更新",
		LcBulkInitSubmodules:                "サブモジュールを一括初期化",
		LcBulkUpdateSubmodules:              "サブモジュールを一括更新",
		LcBulkDeinitSubmodules:              "サブモジュールを一括削除",
		LcViewBulkSubmoduleOptions:          "「一括サブモジュール」オプションを開く",
		LcBulkSubmoduleOptions:              "「一括サブモジュール」オプション",
		LcRunningCommand:                    "コマンドを実行中",
		SubCommitsTitle:                     "サブコミット",
		SubmodulesTitle:                     "サブモジュール",
		NavigationTitle:                     "一覧パネルの操作",
		SuggestionsCheatsheetTitle:          "候補",
		SuggestionsTitle:                    "候補 (%sを押してフォーカス)",
		ExtrasTitle:                         "コマンドログ",
		PushingTagStatus:                    "タグをpush中",
		PullRequestURLCopiedToClipboard:     "pull requestのURLがクリップボードにコピーされました",
		CommitDiffCopiedToClipboard:         "コミットの差分がクリップボードにコピーされました",
		CommitSHACopiedToClipboard:          "コミットのSHAがクリップボードにコピーされました",
		CommitURLCopiedToClipboard:          "コミットのURLがクリップボードにコピーされました",
		CommitMessageCopiedToClipboard:      "コミットメッセージがクリップボードにコピーされました",
		CommitAuthorCopiedToClipboard:       "コミットの作成者名がクリップボードにコピーされました",
    // PatchCopiedToClipboard:              "Patch copied to clipboard",
		LcCopiedToClipboard:                 "クリップボードにコピーされました",
		ErrCannotEditDirectory:              "ディレクトリは編集できません。",
		ErrStageDirWithInlineMergeConflicts: "マージコンフリクトの発生したファイルを含むディレクトリはステージ/アンステージできません。マージコンフリクトを解決してください。",
		ErrRepositoryMovedOrDeleted:         "リポジトリが見つかりません。すでに削除されたか、移動された可能性があります ¯\\_(ツ)_/¯",
		CommandLog:                          "コマンドログ",
		ToggleShowCommandLog:                "コマンドログの表示/非表示を切り替え",
		FocusCommandLog:                     "コマンドログにフォーカス",
		CommandLogHeader:                    "コマンドログの表示/非表示は '%s' で切り替えられます。\n",
		RandomTip:                           "ランダムTips",
		SelectParentCommitForMerge:          "マージする親コミットを選択",
		ToggleWhitespaceInDiffView:          "空白文字の差分の表示有無を切り替え",
		IgnoringWhitespaceInDiffView:        "空白文字の変更は差分画面に表示されません",
		ShowingWhitespaceInDiffView:         "空白文字の変更は差分画面に表示されます",
		IncreaseContextInDiffView:           "diffで表示する変更の周りのコンテキストのサイズを拡大",
		DecreaseContextInDiffView:           "diffで表示する変更の周りのコンテキストのサイズを縮小",
		CreatePullRequest:                   "pull requestを作成",
		CreatePullRequestOptions:            "「pull requestを作成」オプション",
		LcCreatePullRequestOptions:          "「pull requestを作成」オプション",
		LcDefaultBranch:                     "デフォルトブランチ",
		LcSelectBranch:                      "ブランチを選択",
		SelectConfigFile:                    "設定ファイルを選択",
		NoConfigFileFoundErr:                "設定ファイルが見つかりませんでした。",
		LcLoadingFileSuggestions:            "ファイルの候補を読み込み中",
		LcLoadingCommits:                    "コミットを読み込み中",
		MustSpecifyOriginError:              "ブランチを指定する場合、リモートを指定する必要があります",
		GitOutput:                           "Git output:",
		GitCommandFailed:                    "Gitが失敗しました。詳細をコマンドログで確認してください (%sで開く)",
		AbortTitle:                          "%sを中止",
		AbortPrompt:                         "実施中の%sを中止します。よろしいですか?",
		LcOpenLogMenu:                       "ログメニューを開く",
		LogMenuTitle:                        "「コミットログ」オプション",
		ToggleShowGitGraphAll:               "完全なgit graphの表示を切り替え(`git log`コマンドに`--all`フラグを付与)",
		ShowGitGraph:                        "コミットグラフの表示",
		SortCommits:                         "コミットの表示順",
		CantChangeContextSizeError:          "サポートのコストが高いため、パッチ作成モードではコンテキストを切り替えられません。機能が本当に必要な場合はお知らせください!",
		LcOpenCommitInBrowser:               "ブラウザでコミットを開く",
		LcViewBisectOptions:                 "「bisect」オプションを開く",
		ConfirmRevertCommit:                 "{{.selectedCommit}} をrevertしてもよろしいですか?",
		RewordInEditorTitle:                 "コミットメッセージをエディタで編集",
		RewordInEditorPrompt:                "コミットをテキストエディタで編集しますか?",
		HardResetAutostashPrompt:            "'%s' にハードリセットしてもよろしいですか? 必要に応じてauto-stashが実行されます",
		CheckoutPrompt:                      "'%s'をcheckoutしてもよろしいですか?",
		UpstreamGone:                        "(upstream gone)",
		// NukeDescription: "If you want to make all the changes in the worktree go away, this is the way to do it. If there are dirty submodule changes this will stash those changes in the submodule(s).",
		// DiscardStagedChangesDescription: "This will create a new stash entry containing only staged files and then drop it, so that the working tree is left with only unstaged changes",
		// EmptyOutput: "<empty output>",
		// Patch: "Patch",
		// CustomPatch: "Custom patch",
		// LcCommitsCopied: "commits copied",
		// LcCommitCopied: "commit copied",
		Actions: Actions{
			// TODO: combine this with the original keybinding descriptions (those are all in lowercase atm)
			CheckoutCommit:       "コミットをcheckout",
			CheckoutTag:          "タグをcheckout",
			CheckoutBranch:       "ブランチをcheckout",
			ForceCheckoutBranch:  "ブランチを強制的にcheckout",
			DeleteBranch:         "ブランチを削除",
			Merge:                "マージ",
			RebaseBranch:         "rebase branch",
			RenameBranch:         "ブランチ名を変更",
      // SetUnsetUpstream:                  "Set/unset upstream",
			CreateBranch:         "ブランチを作成",
			CherryPick:           "(cherry-pick)コミットを貼り付け",
			CheckoutFile:         "ファイルをcheckout",
			DiscardOldFileChange: "古いファイルの変更を破棄",
			SquashCommitDown:     "コミットを下にsquashする",
			FixupCommit:          "fixupコミット",
			RewordCommit:         "コミットメッセージを編集",
			DropCommit:           "コミットを削除",
			EditCommit:           "コミットを編集",
			AmendCommit:          "amendコミット",
			// ResetCommitAuthor: "Reset commit author",
			// SetCommitAuthor: "Set commit author",
			RevertCommit:                      "コミットをrevert",
			CreateFixupCommit:                 "fixupコミットを作成",
			SquashAllAboveFixupCommits:        "上記全てのfixupコミットをsquashする",
			CreateLightweightTag:              "軽量タグを作成",
			CreateAnnotatedTag:                "注釈付きタグを作成",
			CopyCommitMessageToClipboard:      "コミットメッセージをクリップボードにコピー",
			CopyCommitDiffToClipboard:         "コミットの差分をクリップボードにコピー",
			CopyCommitSHAToClipboard:          "コミットSHAをクリップボードにコピー",
			CopyCommitURLToClipboard:          "コミットのURLをクリップボードにコピー",
			CopyCommitAuthorToClipboard:       "コミットの作成者名をクリップボードにコピー",
			CopyCommitAttributeToClipboard:    "クリップボードにコピー",
      // CopyPatchToClipboard:              "Copy patch to clipboard",
			MoveCommitUp:                      "コミットを上に移動",
			MoveCommitDown:                    "コミットを下に移動",
			CustomCommand:                     "カスタムコマンド",
			DiscardAllChangesInDirectory:      "ディレクトリ内のすべての変更を破棄",
			DiscardUnstagedChangesInDirectory: "ディレクトリ内のすべてのステージされていない変更を破棄",
			DiscardAllChangesInFile:           "ファイル内のすべての変更を破棄",
			DiscardAllUnstagedChangesInFile:   "ファイル内のすべてのステージされていない変更を破棄",
			StageFile:                         "ファイルをステージ",
			StageResolvedFiles:                "マージコンフリクトが解決されたすべてのファイルをステージ",
			UnstageFile:                       "ファイルをアンステージ",
			UnstageAllFiles:                   "すべてのファイルをアンステージ",
			StageAllFiles:                     "すべてのファイルをステージ",
			LcIgnoreExcludeFile:               "ファイルをignore",
			// IgnoreFileErr: "Cannot ignore .gitignore",
			// ExcludeFile: "Exclude file",
			// ExcludeFileErr: "Cannot exclude .git/info/exclude",
			// ExcludeGitIgnoreErr: "Cannot exclude .gitignore",
			Commit:          "コミット",
			EditFile:        "ファイルを編集",
			Push:            "push",
			Pull:            "pull",
			OpenFile:        "ファイルを開く",
			StashAllChanges: "すべての変更をstash",
			// StashAllChangesKeepIndex: "Stash all changes and keep index",
			StashStagedChanges: "ステージされた変更をstash",
			// StashUnstagedChanges: "Stash unstaged changes",
			// StashIncludeUntrackedChanges: "Stash all changes including untracked files",
			GitFlowFinish:               "Git flow finish",
			GitFlowStart:                "Git flow start",
			CopyToClipboard:             "クリップボードにコピー",
			CopySelectedTextToClipboard: "選択されたテキストをクリップボードにコピー",
			RemovePatchFromCommit:       "パッチをコミットから削除",
			MovePatchToSelectedCommit:   "パッチを選択したコミットに移動",
			MovePatchIntoIndex:          "パッチをindexに移動",
			MovePatchIntoNewCommit:      "パッチを次のコミットに移動",
			DeleteRemoteBranch:          "リモートブランチを削除",
			SetBranchUpstream:           "upstreamブランチを設定",
			AddRemote:                   "リモートを追加",
			RemoveRemote:                "リモートを削除",
			UpdateRemote:                "リモートを更新",
			ApplyPatch:                  "パッチを適用",
			Stash:                       "stash",
			RenameStash:                 "stash名を変更",
			RemoveSubmodule:             "サブモジュールを削除",
			ResetSubmodule:              "サブモジュールをリセット",
			AddSubmodule:                "サブモジュールを追加",
			UpdateSubmoduleUrl:          "サブモジュールのURLを更新",
			InitialiseSubmodule:         "サブモジュールを初期化",
			BulkInitialiseSubmodules:    "サブモジュールを一括初期化",
			BulkUpdateSubmodules:        "サブモジュールを一括更新",
			BulkDeinitialiseSubmodules:  "サブモジュールを一括削除",
			UpdateSubmodule:             "サブモジュールを更新",
			DeleteTag:                   "タグを削除",
			PushTag:                     "タグをpush",
			NukeWorkingTree:             "ワーキングツリーを破棄",
			DiscardUnstagedFileChanges:  "ステージされていないファイルへの変更を破棄",
			RemoveUntrackedFiles:        "追跡されていないファイルを削除",
			// RemoveStagedFiles: "Remove staged files",
			SoftReset:           "softリセット",
			MixedReset:          "mixedリセット",
			HardReset:           "hardリセット",
			FastForwardBranch:   "ブランチをfast forward",
			Undo:                "アンドゥ",
			Redo:                "リドゥ",
			CopyPullRequestURL:  "pull requestのURLをコピー",
			OpenMergeTool:       "マージツールを開く",
			OpenCommitInBrowser: "コミットをブラウザで開く",
			OpenPullRequest:     "pull requestをブラウザで開く",
			StartBisect:         "bisectを開始",
			ResetBisect:         "bisectをリセット",
			BisectSkip:          "bisectをスキップ",
			BisectMark:          "bisectをマーク",
		},
		Bisect: Bisect{
			Mark:                        "%s を %s としてマーク",
			MarkStart:                   "%s を %s としてマーク(bisectを開始)",
			Skip:                        "%s をスキップする",
			ResetTitle:                  "'git bisect' をリセット",
			ResetPrompt:                 "'git bisect' をリセットします。よろしいですか?",
			ResetOption:                 "bisectをリセット",
			BisectMenuTitle:             "bisect",
			CompleteTitle:               "bisect完了",
			CompletePrompt:              "bisect完了しました! 以下のコミットで変更が行なわれた可能性があります:\n\n%s\n\n今すぐ'git bisect'をリセットしますか?",
			CompletePromptIndeterminate: "bisectが完了しました! 以下のいずれかのコミットで変更が行なわれた可能性があります:\n\n%s\n\n今すぐ'git bisect'をリセットしますか?",
		},
	}
}
